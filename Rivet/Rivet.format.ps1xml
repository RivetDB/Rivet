<?xml version="1.0" encoding="utf-8" ?>
<Configuration>
    <Controls>
        <Control>
            <Name>RivetOperationResult-GroupingFormat</Name>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <Frame>
                                <LeftIndent>4</LeftIndent>
                                <CustomItem>
                                    <ExpressionBinding>
                                        <ScriptBlock>
                                            $dataSource = $_.Migration.DataSource
                                            if( $dataSource )
                                            {
                                                $dataSource = '{0}.' -f $dataSource
                                            }
                                            '{0}{1}: {2}' -f $dataSource,$_.Migration.Database,$_.Migration.FullName
                                        </ScriptBlock>
                                    </ExpressionBinding>
                                    <NewLine/>
                                </CustomItem>
                            </Frame>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </Control>
        <Control>
            <Name>RivetMigrationResult-GroupingFormat</Name>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <Frame>
                                <LeftIndent>4</LeftIndent>
                                <CustomItem>
                                    <ExpressionBinding>
                                        <ScriptBlock>
                                            $dataSource = $_.DataSource
                                            if( $dataSource )
                                            {
                                                $dataSource = '{0}.' -f $dataSource
                                            }
                                            '{0}{1}' -f $dataSource,$_.Database
                                        </ScriptBlock>
                                    </ExpressionBinding>
                                    <NewLine/>
                                </CustomItem>
                            </Frame>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </Control>
    </Controls>
    <ViewDefinitions>
        <View>
            <Name>Rivet.OperationResult</Name>
            <ViewSelectedBy>
                <TypeName>Rivet.OperationResult</TypeName>
            </ViewSelectedBy>
            <GroupBy>
                <PropertyName>MigrationID</PropertyName>
                <CustomControlName>RivetOperationResult-GroupingFormat</CustomControlName>
            </GroupBy>
            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>Operation</Label>
                        <Width>24</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Schema</Label>
                        <Width>10</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Object</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Details</Label>
                    </TableColumnHeader>
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <ScriptBlock>
                                    $_.Operation.GetType().Name -replace 'Operation$',''
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>
                                    if( $_.Operation | Get-Member -Name 'SchemaName' )
                                    {
                                        $_.Operation.SchemaName
                                    }
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>
                                    $op = $_.Operation
                                    $migration = $_.Migration

                                    if( ($op -is [Rivet.Operations.ExtendedPropertyOperation]) )
                                    {
                                        return $op.ObjectName
                                    }

                                    if( ($op | Get-Member -Name 'Name') )
                                    {
                                        $op.Name
                                    }
                                    elseif( ($op | Get-Member -Name 'TableName') )
                                    {
                                        $op.TableName
                                    }
                                    elseif( ($op | Get-Member -Name 'Path') )
                                    {
                                        if( -not $op.Path )
                                        {
                                            return
                                        }

                                        $migrationRoot = Split-Path -Parent -Path $migration.Path
                                        if( -not (Test-Path -Path $migrationRoot -PathType Container) -or -not (Test-Path -Path $op.Path -PathType Leaf) )
                                        {
                                            return Split-Path -Leaf -Path $op.Path
                                        }

                                        Push-Location -Path $migrationRoot -StackName 'RivetOperationView'
                                        try
                                        {
                                            Resolve-Path -Path $op.Path -Relative
                                        }
                                        finally
                                        {
                                            Pop-Location -StackName 'RivetOperationView'
                                        }
                                    }
                                </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>
                                    if( $_.RowsAffected -ge 0 )
                                    {
                                        return $_.RowsAffected
                                    }

                                    $op = $_.Operation
                                    if( $op -is [Rivet.Operations.RawDdlOperation] )
                                    {
                                        return $_.Query
                                    }

                                    if( ($op | Get-Member -Name 'NewName') )
                                    {
                                        return '=> {0}' -f $op.NewName
                                    }

                                    if( $op -is [Rivet.Operations.AddTableOperation] )
                                    {
                                        return $op.Columns
                                    }

                                    if( $op -is [Rivet.Operations.UpdateTableOperation] )
                                    {
                                        $op.AddColumns | ForEach-Object { '+{0}' -f $_ }
                                        $op.UpdateColumns
                                        $op.RemoveColumns | ForEach-Object { '-{0}' -f $_ }
                                        return
                                    }

                                    if( ($op | Get-Member -Name 'Value') )
                                    {
                                        return $op.Value
                                    }
                                </ScriptBlock>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                </TableRowEntries>
            </TableControl>
        </View>
        <View>
            <Name>Rivet.Migration</Name>
            <ViewSelectedBy>
                <TypeName>Rivet.Migration</TypeName>
            </ViewSelectedBy>
            <GroupBy>
                <PropertyName>Database</PropertyName>
                <CustomControlName>RivetMigrationResult-GroupingFormat</CustomControlName>
            </GroupBy>
            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>ID</Label>
                        <Width>14</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Name</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Push</Label>
                        <Width>4</Width>
                        <Alignment>Right</Alignment>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Pull</Label>
                        <Width>4</Width>
                        <Alignment>Right</Alignment>
                    </TableColumnHeader>
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>ID</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>Name</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.PushOperations.Count</ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <ScriptBlock>$_.PopOperations.Count</ScriptBlock>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                </TableRowEntries>
            </TableControl>
        </View>
    </ViewDefinitions>
</Configuration>